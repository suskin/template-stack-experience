# Stack configuration
#
# A stack's configuration contains all of its metadata, plus other configuration.

# Behaviors specify what should be done in response to different events.
behaviors:

  # We're specifying an engine explicitly here, but theoretically we should be
  # able to infer which engine to use based on the presence of a kustomization.yaml.
  engine:
    type: kustomize

  crds:
    resourcepack.gcp.wordpress.samples.stacks.crossplane.io:
      hooks:
        postCreate:
          - directory: configure
        postUpdate:
          - directory: configure

# Metadata
#
# Normally, some of the metadata would be higher up in the document, but for the purposes
# of this demo, the behavioral configuration is at the top instead.
#
# The "type" or "scope" of a stack. This field is commented out as it is still somewhat
# speculative.
# Accepted values: workspace, environment
# type: workspace

# Below this point is metadata which is identical to what is currently in app.yaml.

# Human readable title of application.
title: Sample Resource Pack for GCP

overviewShort: Configure GCP and set up some basic resources so an application can be easily run.
overview: |-
  This field would normally have a longer overview.

# Maintainer names and emails.
maintainers:
- name: Daniel Suskin
  email: daniel@upbound.io

# Owner names and emails.
owners:
- name: Daniel Suskin
  email: daniel@upbound.io

# Human readable company name.
company: Upbound

# Keywords that describe this application and help search indexing
keywords:
- "samples"
- "examples"
- "tutorials"
- "resource-pack"

# Links to more information about the application (about page, source code, etc.)
website: "https://upbound.io"
source: "https://github.com/crossplaneio/sample-gcp-resource-pack"

# License SPDX name: https://spdx.org/licenses/
license: Apache-2.0

# The dependsOn section isn't filled out in this example, but it would need to
# be filled out for this stack to work properly.
# dependsOn:
